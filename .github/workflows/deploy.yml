name: Build and Deploy to AKS with Helm

on:
  push:
    branches:
      - main
    #tags:
    #  - 'v*.*.*'

env:
  VERSION: ${{ github.ref_name }}
  IMAGE_NAME: ${{ secrets.REGISTRY_USERNAME }}/redis-app
  CHART_PATH: ./chart

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout código
      uses: actions/checkout@v3

    - name: Login no GitHub Container Registry
      run: echo "${{ secrets.REGISTRY_TOKEN }}" | docker login -u ${{ secrets.REGISTRY_USERNAME }} --password-stdin

    - name: Build da imagem Docker
      run: |
        docker build -t $IMAGE_NAME:VERSION .
        docker push $IMAGE_NAME:VERSION

    - name: Login no Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.AZURE_AKS }}
        resource-group: ${{ env.AZURE_RG }}
      
    - name: Instalar Helm
      uses: azure/setup-helm@v3

    - name: Criar arquivo values.yaml dinâmico
      run: |
        cat <<EOF > helm/overrides.yaml
        image:
          name: $IMAGE_NAME
          tag: ${{ github.sha }}
        secret:
          name: "${{ secrets.HELM_VALUES_SECRET_SECRET_KEY }}"
          mountPath: "${{ secrets.HELM_VALUES_SECRET_MOUNTPATH }}"
        service:
          type: "${{ secrets.HELM_VALUES_SERVICE_TYPE }}"
          port: ${{ secrets.HELM_VALUES_SERVICE_PORT }}
        user_assigned_identity_id: "${{ secrets.HELM_VALUES_USER_ASSIGNED_IDENTITY_ID }}"
        keyvault_name: "${{ secrets.HELM_VALUES_KEY_VAULT_NAME }}"
        tenant_id: "${{ secrets.HELM_VALUES_TENANT_ID }}"
        EOF

    - name: Deploy via Helm
      run: |
        helm upgrade --install redis-app $CHART_PATH -f helm/overrides.yaml --namespace prod --create-namespace